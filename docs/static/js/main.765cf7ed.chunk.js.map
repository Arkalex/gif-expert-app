{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gif","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAS,IACnBP,GAAe,SAAAQ,GAAI,OAAKN,GAAL,mBAAmBM,OAEtCL,EAAc,OAOd,2BACIM,KAAK,OACLC,MAAQR,EACRS,SApBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,YCNlBG,EAAc,SAAC,GAAyB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IACtC,OACI,yBAAKC,UAAU,wCACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCNJK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdpB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAoBxC,OAdAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAC,GAEFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAKtB,CAACb,IAEGc,EDjBmBK,CAAcnB,GAAhCM,EAF6B,EAE7BA,KAAMO,EAFuB,EAEvBA,QAGd,OACI,oCACI,wBAAIjB,UAAU,mCAAmCI,GAE/Ca,GAAW,sCAEb,yBAAKjB,UAAU,aAEXU,EAAKE,KAAI,SAACC,GACN,OAAO,kBAAC,EAAD,eACKW,IAAMX,EAAIhB,IACLgB,UEhBxBY,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,SAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ2C,EAAWd,KAAK,SAACR,EAAUuB,GACvB,OAAO,kBAAC,EAAD,CACKH,IAAKG,EACLvB,SAAUA,U,MCX9CwB,IAASC,OACL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.765cf7ed.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.length > 0) {\r\n            setCategories( cats => [inputValue,...cats] );\r\n            \r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange } \r\n             />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate_animated animate_fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=IqJmFaKzcrBqZANa9VLYKc1w3B15umHu`;\r\n    const resp = await fetch(url);\r\n    \r\n    const { data } = await resp.json();\r\n\r\n    const gif = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gif;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs( category );\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate_animated animate_fadeIn\">{category}</h3>\r\n            \r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n            {\r\n                data.map((img) => {\r\n                    return <GifGridItem \r\n                                key={ img.id }\r\n                                { ...img } \r\n                            />\r\n                })\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            })\r\n\r\n    }, [category])\r\n    \r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Goku'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category, i) => {\r\n                        return <GifGrid \r\n                                    key={i}            \r\n                                    category={category} \r\n                                />\r\n                    })\r\n                }\r\n            </ol>\r\n            {\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />\n    ,\n  document.getElementById('root')\n);"],"sourceRoot":""}